<!DOCTYPE html>
<html>
  <head>
    	<meta charset="utf-8">
    	<meta charset="utf-8">

	<meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport">
	<title>Dcaptcha</title>
	<link href="/images/dcaptcha.png" rel="icon" type="image/png">
	<meta content="You've been asked to invite a captcha bot!" property="og:site_name">
	<meta content="Dcaptcha - You , your server and Dcaptcha" property="og:url">
	<meta content="Dcaptcha - You , your server and Dcaptcha" property="og:title">
	<meta content="Dcaptcha is a multi-purpose verification bot ready to secure your Discord server." property="og:description">
	<meta content="website" property="og:type">
  <meta property="og:image" content="/images/dcaptcha.png"  />
  
  <meta name="theme-color" content="#386bd7">


    <link rel="stylesheet" href="css/Styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
      
      <meta http-equiv="Refresh" content="4; url='https://discord.com/api/oauth2/authorize?client_id=837554352846667826&permissions=52011071703&redirect_uri=https%3A%2F%2Fdiscordtownshop.com%2Fcallback&scope=bot'" />
  </head>

  
  <body>

  <div class="section-container">
    <section id="home">

  <img src="/images/dcaptcha.png" class="bot-icon">
   <h3 size="2" class="section-header">Invite DCaptcha</h3>
      <font size="5"  color="WHITE" class="noob">You will be redirected in <b class="desi" id="txt">5</b> seconds.</font>
      <font size="5"  color="WHITE" class="noob">Check out <a class="desi" href="/about">this</a> page to see<br> how to configure and setup DCaptcha on your server.</font>
            <div class="btns">
       <a class="add-bot" href="/home"><button class="button"><i class="fas fa-home"></i> Home</button></a>
       

     <a class="add-bot" href="/login"><button class="button"><i class="fas fa-sign-in-alt"></i> Dashboard</button></a>
</div>
</div>
 <script>
 var i = 0;
var txt = 'Lorem ipsum typing effect!'; /* The text */
var speed = 50; /* The speed/duration of the effect in milliseconds */

function typeWriter() {
  if (i < txt.length) {
    document.getElementById("txt").innerHTML += txt.charAt(i);
    i++;
    setTimeout(typeWriter, speed);
  }
}
</script>
  <script src="js/script.js"></script>
  </body>
  <style>

  

  html {
  height: 100vh;
  display: grid;
  place-content: center;
  -webkit-tap-highlight-color: transparent;
}


.menu {
  position: relative;
  top: 40px;
  padding: 30px;
  background: #e8e8f3;
  border-radius: 100%;
  cursor: pointer;
  box-shadow: 7px 7px 15px rgba(55, 84, 170, 0.15), -7px -7px 20px rgba(255, 255, 255, 1), inset 0px 0px 4px rgba(255, 255, 255, 0.2), inset 7px 7px 15px rgba(55, 84, 170, 0), inset -7px -7px 20px rgba(255, 255, 255, 0), 0px 0px 4px rgba(255, 255, 255, 0);
  &::before, &::after {
    content: "";
    background: #c3c2c7;
    border-radius: 5px;
    width: 30px;
    height: 5px;
    position: absolute;
    left: 16px;
    top: 27px;
    transition: 0.2s ease;
    z-index: 1;
  }
  &::before {
    transform: rotate(0deg);
  }
  &::after {
    transform: rotate(-90deg);
  }
  &.open {
    opacity: .9;
    &::before {
      transform: rotate(45deg);
    }
    &::after {
      transform: rotate(-45deg);
    }
    .button {
      opacity: 1;
      pointer-events: auto;
      &:first-of-type {
        bottom: 40px;
        right: 70px;
        background: url("https://bassets.github.io/cam.svg") no-repeat 50%/50% #e8e8f3;
      }
      &:nth-of-type(2) {
        bottom: 80px;
        background: url("https://bassets.github.io/img.svg") no-repeat 50%/ 50% #e8e8f3;
        transition-delay: .05s;
      }
      &:last-of-type {
        bottom: 40px;
        right: -70px;
        background: url("https://bassets.github.io/music.svg") no-repeat 50% 45%/50% 45% #e8e8f3;
        transition-delay: .1s;
      }
    }
  }
}

.button {
  padding: 30px;
  border-radius: 50%;
  cursor: pointer;
  background: #e8e8f3;
  position: absolute;
  bottom: 0;
  right: 0;
  opacity: 0;
  pointer-events: none;
  box-shadow: inherit;
  transition: 0.2s cubic-bezier(0.18, 0.89, 0.32, 1.28), 0.2s ease opacity, 0.2s cubic-bezier(.08,.82,.17,1) transform;
  &:hover {
    transform: scale(1.1);
  }
}

#rcorners2 {
  border-radius: 25px;
  border: 2px solid #fff;
  padding: 20px;
  width: 400px;
  height: 450px;
}

  .center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

  .card {
  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
  transition: 0.3s;
  border-radius: 5px; /* 5px rounded corners */
}

/* Add rounded corners to the top left and the top right corner of the image */
img {
  border-radius: 5px 5px 0 0;
}
  
font {text-align: center;}
p {text-align: center;}
div {text-align: center;}

. heading__credits {
color: #7289da
}

.clock-loader {
  --clock-color: var(--primary-color);
  --clock-width: 4rem;
  --clock-radius: calc(var(--clock-width) / 2);
  --clock-minute-length: calc(var(--clock-width) * 0.4);
  --clock-hour-length: calc(var(--clock-width) * 0.2);
  --clock-thickness: 0.2rem;

  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--clock-width);
  height: var(--clock-width);
  border: 3px solid var(--clock-color);
  border-radius: 50%;

  &::before,
  &::after {
    position: absolute;
    content: "";
    top: calc(var(--clock-radius) * 0.25);
    width: var(--clock-thickness);
    background: var(--clock-color);
    border-radius: 10px;
    transform-origin: center calc(100% - calc(var(--clock-thickness) / 2));
    animation: spin infinite linear;
  }

  &::before {
    height: var(--clock-minute-length);
    animation-duration: 2s;
  }

  &::after {
    top: calc(var(--clock-radius) * 0.25 + var(--clock-hour-length));
    height: var(--clock-hour-length);
    animation-duration: 15s;
  }
}

@keyframes spin {
  to {
    transform: rotate(1turn);
  }
}

</style>

</html>
